{
  "name": "duplex-child-process",
  "description": "Spawn a child process as a duplex stream",
  "version": "0.0.2",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/stream-utils/duplex-child-process.git"
  },
  "bugs": {
    "url": "https://github.com/stream-utils/duplex-child-process/issues"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "stream-to": "*"
  },
  "scripts": {
    "test": "make test;"
  },
  "readme": "# Duplex Child Process [![Build Status](https://travis-ci.org/stream-utils/duplex-child-process.png)](https://travis-ci.org/stream-utils/duplex-child-process)\n\nSpawn a child process as a duplex stream.\n\n```js\nvar Child_Process = require('duplex-child-process')\n\nvar toJPEG = Child_Process.spawn('convert', ['-', 'JPEG:-'])\nvar getFormat = Child_Process.spawn('identify', ['-format', '%m', '-'])\n\nfs.createReadStream('img.png')\n.pipe(toJPEG)\n.pipe(getFormat)\n.once('readable', function () {\n  var format = this.read().toString('utf8')\n  assert.equal(format, 'JPEG')\n})\n```\n\n## API\n\n### Child_Process.spawn(command, [args], [options])\n\nConvenience wrapper for:\n\n```js\nnew Child_Process().spawn(command, [args], [options])\n```\n\n### new Child_Process(options)\n\nCreates a new duplex child process instance.\nDoes not spawn a new child process yet.\nThis is separated from `.spawn()` because you may want to use this in your own constructor.\n\n\n### proc.spawn(command, [args], [options])\n\nThis actually spawns the child process.\nIn your own app, execute this once you've gotten all your arguments.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "duplex-child-process@0.0.2",
  "dist": {
    "shasum": "af16a6ee28e9cb26fc4c3b787ab198ef08e4949f"
  },
  "_from": "duplex-child-process@",
  "_resolved": "http://registry.npmjs.org/duplex-child-process/-/duplex-child-process-0.0.2.tgz"
}
